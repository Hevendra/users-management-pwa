{"version":3,"sources":["services/user-service.js","components/user/user-detail.component.jsx","components/shared/pagination.component.jsx","components/shared/search.component.jsx","components/home/home.component.jsx","components/constants.js","serviceWorker.js","index.js"],"names":["userService","fetchUsers","pageNo","pageSize","api_endpoint","fetch","then","response","ok","json","Promise","reject","statusText","user","catch","e","alert","UserDetail","props","data","handleDelete","avatar","first_name","last_name","id","className","src","alt","onClick","Pagination","isAllFetched","pageChangeCallback","nextPage","prePage","preStatusClass","nextStatusClass","href","Search","handleChange","placeholder","onChange","Home","useState","userList","setUserList","setPageNo","setAllFetched","allUsers","setAllUsers","deleteUserById","updatedUsersList","filter","useEffect","size","res","page","total_pages","error","console","log","fetchUserFromApi","value","target","length","searchTxt","toLowerCase","includes","searchUsers","users","map","i","key","push","showUsers","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d351bf3.chunk.js","sourcesContent":["const BASE_URL = 'https://reqres.in/api/'\n\nexport const userService = {\n  fetchUsers\n};\n\nfunction fetchUsers(pageNo, pageSize) {\n  const api_endpoint = `${BASE_URL}users?page=${pageNo}&per_page=${pageSize}`\n  return fetch(\n    api_endpoint\n  )\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(response.statusText);\n      }\n      return response.json();\n    })\n    .then(user => {\n      return user;\n    })\n    .catch(e => {\n      alert(\"Something went wrong!!\");\n    });\n}\n","import React from \"react\";\nimport \"./user-detail.style.css\";\n\nconst UserDetail = props => {\n  const { data, handleDelete } = props;\n  const { avatar, first_name, last_name, id } = data;\n  return (\n    <div className=\"card-body\">\n      <div className=\"wrapper\">\n        <img\n          id=\"image_avatar\"\n          src={avatar}\n          alt=\"PS\"\n          className=\"image--cover\"\n        />\n      </div>\n      <p className=\"display-name\">{`${first_name} ${last_name}`} </p>\n      <p\n        className=\"button\"\n        onClick={e => handleDelete(id)}\n      >\n        <span>Delete </span>\n      </p>\n    </div>\n  );\n};\n\nexport default UserDetail;\n","import React from \"react\";\nimport \"./pagination.style.css\";\n\nconst Pagination = ({ pageNo, isAllFetched, pageChangeCallback }) => {\n  let nextPage = pageNo + 1;\n  let prePage = pageNo <= 1 ? 1 : pageNo - 1;\n  let preStatusClass = pageNo <= 1 ? \"disabled\" : \"active\";\n  let nextStatusClass = isAllFetched ? \"disabled\" : \"active\";\n\n  return (\n    <div className=\"pagination\">\n      <a\n        href=\"#/users/\"\n        onClick={e => pageChangeCallback(prePage)}\n        className={preStatusClass}\n      >\n        ❮❮\n      </a>\n      <a\n        href=\"#/users/\"\n        onClick={e => pageChangeCallback(nextPage)}\n        className={nextStatusClass}\n      >\n        ❯❯\n      </a>\n    </div>\n  );\n};\nexport default Pagination;\n","import React from 'react'\r\nimport './search.style.scss'\r\n\r\nconst Search = (props) => {\r\n    const { handleChange } = props\r\n    return (\r\n        <div className=\"search-box\">\r\n            <span className=\"icon\"><i className=\"fa fa-search\"></i></span>\r\n            <input className=\"search\" placeholder=\"Search...\" onChange={handleChange}/>\r\n        </div>\r\n        )\r\n    }\r\nexport default Search","import React, { useState, useEffect } from 'react';\nimport { userService } from '../../services/user-service';\nimport UserDetail from '../user/user-detail.component';\nimport Pagination from '../shared/pagination.component';\nimport Search from '../shared/search.component'\nimport { DEFAULT_PAGE_SIZE } from '../constants'\nimport \"./home.style.css\";\n\nconst Home = () => {\n  \n  const [userList, setUserList] = useState([])\n  const [pageNo, setPageNo] = useState(1)\n  const [isAllFetched, setAllFetched] = useState(false)\n  const [allUsers, setAllUsers] = useState([])\n  \n  const fetchUserFromApi = (pageNo, size) => {\n  userService.fetchUsers(pageNo, size).then(\n    res => {\n      const {data, page, total_pages} = res\n      setUserList(data)\n      setAllFetched(page===total_pages)\n      setAllUsers(data)\n    },\n    error => {\n      console.log(error);\n    });\n  }\n\n  const deleteUserById = (id) => {\n    let updatedUsersList = userList.filter(\n      user => user.id !== id\n    );\n    setUserList(updatedUsersList)\n    setAllUsers(updatedUsersList)\n  }\n\n  const searchUsers = (searchTxt) =>{\n    let updatedUsersList = allUsers.filter(user =>   \n      `${user.first_name} ${user.last_name}`.toLowerCase().includes(searchTxt.toLowerCase())\n    );\n    setUserList(updatedUsersList)\n  }\n\n  const onSearchChange = (e) => {\n    const { target:{value}} = e\n    if(value.length>2)\n    {\n      searchUsers(value)\n    }\n    else if(value.length===2){\n      setUserList(allUsers)  \n    }\n  }\n\n  const showUsers = () => {\n    let users = [];\n    if (userList.length) {\n       users = userList.map((user, i) => {\n          return <UserDetail\n            key={i}\n            data={user}\n            handleDelete={deleteUserById}\n          />\n      });\n    } else {\n      users.push(\n        <div key={1} className=\"display-name\">\n          No User data found!{\" \"}\n        </div>\n      );\n    }\n    return users;\n  }\n\n  const onPageChange = (pageNo)=> {\n    setPageNo(pageNo)\n  }\n\n  useEffect(()=>{\n    fetchUserFromApi(pageNo, DEFAULT_PAGE_SIZE);\n  },[pageNo])\n\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1 className=\"App-title\">User Management</h1>\n          <div className=\"search-container\">\n          <Search handleChange={onSearchChange}/>\n          <Pagination\n            pageNo={pageNo}\n            isAllFetched={isAllFetched}\n            pageChangeCallback={onPageChange}\n          />\n          </div>\n        </div>\n        <div className=\"Container\">{showUsers()}</div>\n      </div>\n    )\n}\n\nexport default Home\n","export const DEFAULT_PAGE_SIZE = 10 ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/home/home.component';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}